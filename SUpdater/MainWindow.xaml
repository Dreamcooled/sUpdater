<controls:MetroWindow x:Class="SUpdater.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SUpdater"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:utils="clr-namespace:SUpdater.Utils"
        xmlns:controls1="clr-namespace:SUpdater.Controls"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="800" >
    
    <!--<StackPanel>
        <Label Content="{Binding [Title].StringData}" />
        <Label Content="{Binding [Status].StringData}" />
        <Label Content="{Binding [Poster].StringData}" />
        <Image Source="{Binding [Poster].ImageData.ImageSource}"></Image>
    </StackPanel>-->
    
    <Grid x:Name="ShowGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.7*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="0.3*" MaxWidth="600" MinWidth="300"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <ToggleButton IsChecked="{Binding ElementName=ShowGrid,Path=(controls1:ValueControl.EditMode)}" HorizontalAlignment="Left" Content="EditMode" />


        <TreeView Grid.Row="1" Grid.Column="0" Grid.IsSharedSizeScope="True" utils:TreeViewExtensions.EnableMultiSelect="true" ItemsSource="{Binding Entities}" x:Name="ShowTreeView">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MetroTreeViewItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <!--<Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>-->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <StackPanel>
                                    <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                MinHeight="{TemplateBinding MinHeight}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <Grid Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                  VerticalAlignment="Stretch">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="19" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ToggleButton x:Name="Expander"
                                              Style="{StaticResource ExpandCollapseToggleStyle}"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}"
                                              ClickMode="Press" />

                                            <ContentPresenter x:Name="PART_Header"
                                                  Grid.Column="1"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Grid>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost">
                                        <ItemsPresenter.LayoutTransform>
                                            <ScaleTransform ScaleY="1" />
                                        </ItemsPresenter.LayoutTransform>
                                    </ItemsPresenter>
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded"
                                 Value="False">
                                        <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed" />
                                    </Trigger>

                                    <Trigger Property="HasItems"
                                 Value="False">
                                        <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden" />
                                    </Trigger>

                                    <Trigger SourceName="Border"
                                 Property="IsMouseOver"
                                 Value="True">
                                        <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush3}" />
                                        <Setter Property="Foreground"
                                    Value="{DynamicResource BlackColorBrush}" />
                                    </Trigger>
                                    <Trigger Property="utils:TreeViewExtensions.IsSelected"
                                 Value="True">
                                        <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush}" />
                                        <Setter Property="Foreground"
                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                    </Trigger>
                                    <Trigger Property="utils:TreeViewExtensions.IsSelected"
                                 Value="{x:Null}">
                                        <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush4}" />
                                        <Setter Property="Foreground"
                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled"
                                 Value="False">
                                        <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush7}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsEnabled"
                                           Value="False" />
                                            <Condition Property="utils:TreeViewExtensions.IsSelected"
                                           Value="True" />
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter TargetName="Border"
                                        Property="Background"
                                        Value="{DynamicResource GrayBrush7}" />
                                            <Setter Property="Foreground"
                                        Value="{DynamicResource AccentSelectedColorBrush}" />
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="utils:TreeViewExtensions.IsSelected"
                                           Value="True" />
                                            <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush2}" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Entities}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label FontSize="18" Content="{Binding [Title].StringData}" />
                        <TextBlock Grid.Column="1" Text="{Binding [EpisodeCount].IntData, StringFormat={}{0} Episodes}" Margin="10,0" VerticalAlignment="Center"/>
                    </Grid>
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate >
                            <!--DataType="{x:Type viewModel:EpisodeViewModel}"-->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="a"/>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="b"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="{Binding Name}" Grid.Column="0" Margin="-20,0,0,0" Foreground="{DynamicResource DisabledMenuItemForeground}" />
                                <TextBlock Text="{Binding [Title].StringData}" Padding="5" Grid.Column="1" />
                                <Label Content="{Binding [Vote].StringData}" Grid.Column="2" Foreground="{DynamicResource DisabledMenuItemForeground}"/>
                                <Label Content="{Binding [AirDate].StringData}" Grid.Column="3"  Margin="0,0,10,0" Foreground="{DynamicResource DisabledMenuItemForeground}" />

                            </Grid>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="5" HorizontalAlignment="Stretch" />
        <Border Background="{DynamicResource AccentColorBrush4}" Grid.Column="2" Grid.Row="0" Grid.RowSpan="2">
            <TabControl x:Name="EpisodeTabControl" SelectedIndex="0">
                <TabControl.Template>
                    <ControlTemplate TargetType="TabControl">
                        <ContentPresenter Content="{TemplateBinding SelectedContent}"/>
                    </ControlTemplate>
                </TabControl.Template>
                <TabItem Header="None">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <!--image-->
                            <RowDefinition Height="200" />
                            <!--desc-->


                            <RowDefinition Height="*"/>
                            <!-- list-->
                        </Grid.RowDefinitions>
                        <Image Source="{Binding [Backdrop].ImageData.ImageSource}" VerticalAlignment="Top" Stretch="Uniform" />

                        <ScrollViewer Margin="10" Grid.Row="1" VerticalScrollBarVisibility="Visible">
                            <TextBlock TextWrapping="Wrap" Text="{Binding [Overview].StringData}"/>
                        </ScrollViewer>

                        <StackPanel Grid.Row="2">
                            <controls1:ValueControl Entity="{Binding .}" HorizontalAlignment="Left" Margin="10,2" />
                            <controls1:ValueControlAdder Entity="{Binding .}" HorizontalAlignment="Left" Margin="10,2" />
                        </StackPanel>

                    </Grid>
                </TabItem>
                <TabItem Header="Season"  x:Name="EpisodeTabControl_Season" DataContext="{x:Null}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <!--Title /Button-->
                            <RowDefinition Height="Auto" />
                            <!--Image-->
                            <RowDefinition Height="Auto" />
                            <!--desc-->

                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0"   FontSize="24" Text="{Binding [Title].StringData }" Margin="10,5" />
                        <Image Grid.Row="1" Margin="10" Grid.Column="0" Source="{Binding [Poster].ImageData.ImageSource}" HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="Uniform" />
                        <ScrollViewer Margin="10" Grid.Row="2" VerticalScrollBarVisibility="Visible">
                            <TextBlock TextWrapping="Wrap" Text="{Binding [Overview].StringData}"/>
                        </ScrollViewer>

                        <StackPanel Grid.Row="3">
                            <controls1:ValueControl Entity="{Binding .}" HorizontalAlignment="Left" Margin="10,2" />
                            <controls1:ValueControlAdder Entity="{Binding .}" HorizontalAlignment="Left" Margin="10,2" />
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Episode" x:Name="EpisodeTabControl_Episode" DataContext="{x:Null}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                             <!--Title /Button--> 
                            <RowDefinition Height="Auto" />
                             <!--Image-->
                            <RowDefinition Height="Auto" />
                            <!--desc-->

                            <RowDefinition Height="*"/>

                        </Grid.RowDefinitions>

                        <TextBlock FontSize="24" Text="{Binding [Title].StringData }" TextTrimming="CharacterEllipsis" ToolTip="{Binding [Title].StringData }" VerticalAlignment="Center"  Margin="10,5" />
                        <Image Grid.Row="1"  Margin="10,5" Source="{Binding [Poster].ImageData.ImageSource}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Stretch="Uniform"  />
                        <ScrollViewer Margin="10" Grid.Row="2" VerticalScrollBarVisibility="Visible">
                            <TextBlock TextWrapping="Wrap" Text="{Binding [Overview].StringData}"/>
                        </ScrollViewer>

                        <StackPanel Grid.Row="3">
                            <controls1:ValueControl Entity="{Binding .}" HorizontalAlignment="Left" Margin="10,2" />
                            <controls1:ValueControlAdder Entity="{Binding .}" HorizontalAlignment="Left" Margin="10,2" />
                        </StackPanel>

                    </Grid>
                </TabItem>
                <TabItem></TabItem>
            </TabControl>
        </Border>
    </Grid>

</controls:MetroWindow>
